{
  // Configuration for JavaScript files
  "extends": [
    "airbnb-base",
    "next/core-web-vitals", // Needed to avoid warning in next.js build: 'The Next.js plugin was not detected in your ESLint configuration'
    "plugin:prettier/recommended"
  ],
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "singleQuote": true,
        "endOfLine": "auto"
      }
    ]
  },
  "overrides": [
    // Configuration for TypeScript files
    {
      "files": ["*.ts", "*.tsx"],
      "parser": "@typescript-eslint/parser",
      "plugins": ["@typescript-eslint", "unused-imports", "simple-import-sort"],
      // "extends": ["airbnb-typescript", "next/core-web-vitals", "plugin:tailwindcss/recommended"],
      "extends": ["airbnb-typescript", "next/core-web-vitals"],
      "parserOptions": {
        "project": "./tsconfig.json"
      },
      "rules": {
        "prettier/prettier": ["error", { "singleQuote": true, "endOfLine": "auto", "printWidth": 120 }],
        "react/destructuring-assignment": "off", // Vscode doesn't support automatically destructuring, it's a pain to add a new variable
        "jsx-a11y/anchor-is-valid": "off", // Next.js use his own internal link system
        "react/require-default-props": "off", // Allow non-defined react props as undefined
        "react/jsx-props-no-spreading": "off", // _app.tsx uses spread operator and also, react-hook-form
        "react-hooks/exhaustive-deps": "warn", // Incorrectly report needed dependency with Next.js router
        "@next/next/no-img-element": "off", // We currently not using next/image because it isn't supported with SSG mode
        "@typescript-eslint/comma-dangle": "off", // Avoid conflict rule between Eslint and Prettier
        "@typescript-eslint/consistent-type-imports": "error", // Ensure `import type` is used when it's necessary
        "import/prefer-default-export": "off", // Named export is easier to refactor automatically
        "@typescript-eslint/no-unused-vars": "off",
        "no-underscore-dangle": "off",
        "no-console": "off",
        "import/no-cycle": "off",
        "unused-imports/no-unused-imports": "error",
        "unused-imports/no-unused-vars": ["off", { "argsIgnorePattern": "^_" }],
        "no-restricted-exports": ["off", { "restrictedNamedExports": ["default"] }],
        "new-cap": ["off", { "newIsCap": true }],
        "no-plusplus": "off",
        "@typescript-eslint/naming-convention": [
          "warn",
          {
            "selector": "variable",
            "types": ["boolean"],
            "format": ["camelCase", "PascalCase", "UPPER_CASE", "snake_case"]
          }
        ],
        "no-return-assign": "off",
        "react/display-name": "off",
        "no-param-reassign": "off",
        "@typescript-eslint/no-use-before-define": "off",
        "@next/next/no-html-link-for-pages": "off",
        // "react/jsx-key": "true",
        // "tailwindcss/no-custom-classname": "off",
        // "tailwindcss/classnames-order": "error",
        "simple-import-sort/imports": "error", // Import configuration for `eslint-plugin-simple-import-sort`
        "simple-import-sort/exports": "error", // Export configuration for `eslint-plugin-simple-import-sort`,
        "indent": "off",
        "@typescript-eslint/indent": "off",
        "jsx-a11y/alt-text": "off",
        "import/no-extraneous-dependencies": "off"
      }
    }
  ],
  "settings": {
    "tailwindcss": {
      "callees": ["cn"],
      "config": "tailwind.config.js"
    },
    "next": {
      "rootDir": true
    }
  }
}
